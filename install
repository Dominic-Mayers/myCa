#!/bin/bash

if ! test -d "private" || ! test -d "certs" || ! test -f "openssl.cnf.orig" || ! test -d "intermediate" ||  ! test -d "intermediate/private" || ! test -d "intermediate/certs"  || ! test -f "intermediate/openssl.cnf.orig" ; then
   echo "Directory structure is invalid";
   exit; 
fi

if test -f "index.txt" || test -f "serial"; then
   #echo "Warning: Database file(s)  already exist in root folder.";
   #echo "The purpose of these files is to prevent duplicate intermediate certificates or eventually write one over an existing one.";
   if ! test -f "certs/ca.cert.pem"; then
      echo "There is no root certificate.";
      echo "So the database files are obsolete and reset."
      echo;
      resetRootDd=Yes 
   elif ! test -f "intermediate/certs/intermediate.cert.pem"; then
      echo "A root certificate exists. So the root database files might be in use."
      echo "Yet, it is fine and perhaps you should reset these files, if you have deleted and never published associated intermediate certificates.";
      read -p "Reset these files (Yes/No) [No]: " resetRootDd 
      resetRootDd=${resetRootDb:-No}
      echo;
   else
      echo "An intermediate certificate 'intermediate/certs/intermediate.cert.pem' exists."; 
      echo "We assume it is validly tracked in the root database and thus you want to keep the root database files.";
      echo "Otherwise, kill the execution, remove the intermediate certificate and retry.";
      resetRootDd=No
      echo; 
   fi
else
   touch "index.txt";
   echo  "1000" > "serial";
   echo  "Root database files initialized.";
   echo;
fi

if [ "$resetRootDd" = "Yes" ]; then
   rm    "index.txt"; 
   touch "index.txt";
   echo  "1000" > "serial";
fi

if test -f "intermediate/index.txt"  ||  test -f "intermediate/serial" || test -f "intermediate/crlnumber" ; then
   #echo "Warning: Database file(s) or serial file(s) already exist in intermediate folder.";
   #echo "The purpose of these files is to prevent duplicate signed certificates or eventually write one over an existing one.";
   if ! test -f "intermediate/certs/intermediate.cert.pem"; then
      echo "There is no intermediate certificate.";  
      echo "So the intermediate database files are obsolete and reset.";
      echo;
      resetIntermediateDd=Yes    
   else
      echo "An intermediary CA certificate exists. So the intermediate database files might be in use.";
      echo "Yet, it is fine and perhaps you should reset these files, if you have deleted and never published associated signed certificates.";
      read -p "Reset these files (Yes/No) [No]: " resetIntermediateDb 
      resetIntermediateDd=${resetIntermediateDb:-No}
      echo;
   fi
else
   touch "intermediate/index.txt";
   echo  "1000" > "intermediate/serial";
   echo  "1000" > "intermediate/crlnumber";
   echo  "Intermediate database files initialized.";
   echo;
fi

if [ "$resetIntermediateDd" = "Yes" ]; then
   rm    "intermediate/index.txt"; 
   touch "intermediate/index.txt";
   echo  "1000" > "intermediate/serial";
   echo  "1000" > "intermediate/crlnumber";
fi

dir=$(pwd);

if ! test -f "openssl.cnf"; then
   echo "Please copy openssl.cnf.orig to openssl.cnf and adapt it to your need.";
   echo "In particular, make sure dir = $dir";
   exit;
fi

if ! test -f "intermediate/openssl.cnf"; then
   echo "Please copy intermediate/openssl.cnf.orig to intermediate/openssl.cnf and adapt it to your need.";
   echo "In particular, make sure dir = $dir/intermediate.";
   echo "You might want to uncomment and edit the section [ alt_names ] and uncomment the line before.";
   exit;
fi

chmod 700 private;

if ! test -f "private/ca.key.pem"; then
   echo "Creating private key for root CA using:";
   echo "openssl genrsa -aes256 -out private/ca.key.pem 4096";
   openssl genrsa -aes256 -out private/ca.key.pem 4096;
   chmod 400 private/ca.key.pem;
   echo;
else
   echo "Info: The private key 'private/ca.key.pem' for root CA already exists";
   echo;
fi

newRootCert=false;
if ! test -f "certs/ca.cert.pem"; then
   echo "Creating the root certificate using:";
   echo "openssl req -config openssl.cnf -key private/ca.key.pem -new -x509 -days 7300 -sha256 -extensions v3_ca -out certs/ca.cert.pem";
   openssl req -config openssl.cnf -key private/ca.key.pem -new -x509 -days 7300 -sha256 -extensions v3_ca -out certs/ca.cert.pem
   chmod 444 certs/ca.cert.pem;
   newRootCert=true;
   echo;
else
   echo "Info: The root certificate 'certs/ca.cert.pem' already exists";
   echo;
fi

chmod 700 intermediate/private;

if ! test -f "intermediate/private/intermediate.key.pem"; then
   echo "Creating the intermediate private key with:";
   echo "openssl genrsa -aes256 -out intermediate/private/intermediate.key.pem 4096"; 
   openssl genrsa -aes256 -out intermediate/private/intermediate.key.pem 4096;
   chmod 400 intermediate/private/intermediate.key.pem;
   echo;
else
   echo "Info: The intermediate private key 'intermediate/private/intermediate.key.pem' already exists";
   echo;
fi

if ! test -f "intermediate/csr/intermediate.csr.pem"; then
   echo "Creating the intermediate certificate.";
   echo "The details should generally match the root CA.";
   echo "The Common Name, however, must be different.";
   echo "First, a certificate signing request (CSR) with:"
   echo "openssl req -config intermediate/openssl.cnf -new -sha256 -key intermediate/private/intermediate.key.pem -out intermediate/csr/intermediate.csr.pem"; 
   openssl req -config intermediate/openssl.cnf -new -sha256 -key intermediate/private/intermediate.key.pem -out intermediate/csr/intermediate.csr.pem
   echo;
else
   echo "Info: The intermediate CA CSR 'intermediate/csr/intermediate.csr.pem' already exists";
   echo;   
fi

newSignedIntermediateCert=false;
if ! test -f "intermediate/certs/intermediate.cert.pem"; then
   echo "Using the root CA to sign the intermediate CSR with:";
   echo "openssl ca -config openssl.cnf -extensions v3_intermediate_ca -days 3650 -notext -md sha256 -in intermediate/csr/intermediate.csr.pem -out intermediate/certs/intermediate.cert.pem"
   openssl ca -config openssl.cnf -extensions v3_intermediate_ca -days 3650 -notext -md sha256 -in intermediate/csr/intermediate.csr.pem -out intermediate/certs/intermediate.cert.pem
   chmod 444 intermediate/certs/intermediate.cert.pem;
   newSignedIntermediateCert=true;
   echo;
else
   echo "Info: The intermediate CA certificate 'intermediate/certs/intermediate.cert.pem' already exists.";
   echo;
   if [ "$newRootCert" = "true" ]; then 
      echo "Warning: The root certificate was renewed and might not match the existing intermediary certificate.";
      echo;
   fi
fi

if [ "$newSignedIntermediateCert" = "true" ] ; then
   echo "Creating the certificate chain file with:";
   echo "cat intermediate/certs/intermediate.cert.pem certs/ca.cert.pem > intermediate/certs/ca-chain.cert.pem";
   cat intermediate/certs/intermediate.cert.pem certs/ca.cert.pem > intermediate/certs/ca-chain.cert.pem;
   echo;
else
   echo "Info: No new intermediate certificate. Thus, certificate chain not created or updated.";
   echo;
fi